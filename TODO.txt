1) Finish matrix(s) implementations

3) Implement alternate methods of training neural nets

4) Write test to compare k-dimension tree performance and accuracy with neural net results

5) Clean up commented out/unused code

6) Update/Clean up Func module
    6.1) Pseudo-Bind() functionality
    6.2) Tuple as args functionality

9) nth Polynomial Estimation module
	9.1) Package proof of concept into a module

10) Look into algorithms for nonlinear regression

14) Simple Wolfram Language quantity/array/set parser
	14.1) Ex: Quantity[2.123, "Pounds"]
	14.2) Look into WL C api/lib

15) Convert Math_Matrix.cpp tests to use tensor_t and the correct style

16) Explore Property<T> concept a bit more for a new module
	16.1) Property<T, bool settable> class with default state Property<T, false>
	16.2) Property<T, true> inherits from Property<T, false> and adds settable functionality
	16.3) Uses std::function<T()> and std::function<void(T)> to set/get 
		16.3.1) overload operator=() and operator T() to call functions

17) Explore dynamic object concept for framework/sandbox module
	17.1) Use std::function members as methods to dynamically configure and create objects with pseudo-inheritance

18) SQL/SQLite module with integration with CSV and Neural Net modules?

19) Entity serialization module?

20) Implement FuncMatrix::flattenOverrides()
    20.1) To integrate FuncMatrix::instantiated overrides into the FuncMatrix::def functional

21) Look into inference/rule engines
	21.1) Castor?

22) Image+Video+Audio processing/importing
    22.1) For ML training/research
    22.2) As a lib module

23) Re-write old Raytracer
	23.1) For research in:
		23.1.1) Motion tracking
		23.1.2) Image recognition

24) Symbolic List
	24.1) Ex: Representing a path in a NN, allowing for list insert operations that are mapped to inserting neurons in the network

25) NeuralNet::package() function
	25.1) Serializes the network to a static, self-contained lambda function once trained

26) Add vector functions to Matrix<1,...> class
	26.1) Unit()
	26.2) Magnitude()
	26.3) Reflect()

27) Associative graphs
	27.1) Time series based
	27.2) Static/Time independent
	27.3) Weighted
	27.4) Unweighted
	27.5) Traversal/Shortest path

28) Cleanup Castor files to not throw compilation warnings

29) Add module for server/multithreaded singleton operations
	29.1) Mutexed data operations
	29.2) Methods to pass lambda funcs that will run on the server
	29.3) Socket(?) and MT message channel access
	29.4) Example:
		29.4.1) Single SQLite server/connection accessible by multiple threads/processes
		29.4.2) Segmented neural networks

30) Genetic algorithm module